{"ast":null,"code":"import _classCallCheck from \"/home/dnis/Dev/portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/dnis/Dev/portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/home/dnis/Dev/portfolio/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/home/dnis/Dev/portfolio/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/home/dnis/Dev/portfolio/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/dnis/Dev/portfolio/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { AbsorberSizeLimit } from \"./AbsorberSizeLimit\";\nimport { ValueWithRandom } from \"../../../../Options/Classes/ValueWithRandom\";\nexport var AbsorberSize = /*#__PURE__*/function (_ValueWithRandom) {\n  _inherits(AbsorberSize, _ValueWithRandom);\n\n  var _super = _createSuper(AbsorberSize);\n\n  function AbsorberSize() {\n    var _this;\n\n    _classCallCheck(this, AbsorberSize);\n\n    _this = _super.call(this);\n    _this.density = 5;\n    _this.random.minimumValue = 1;\n    _this.value = 50;\n    _this.limit = new AbsorberSizeLimit();\n    return _this;\n  }\n\n  _createClass(AbsorberSize, [{\n    key: \"load\",\n    value: function load(data) {\n      if (!data) {\n        return;\n      }\n\n      _get(_getPrototypeOf(AbsorberSize.prototype), \"load\", this).call(this, data);\n\n      if (data.density !== undefined) {\n        this.density = data.density;\n      }\n\n      if (typeof data.limit === \"number\") {\n        this.limit.radius = data.limit;\n      } else {\n        this.limit.load(data.limit);\n      }\n    }\n  }]);\n\n  return AbsorberSize;\n}(ValueWithRandom);","map":{"version":3,"sources":["/home/dnis/Dev/portfolio/node_modules/tsparticles/esm/Plugins/Absorbers/Options/Classes/AbsorberSize.js"],"names":["AbsorberSizeLimit","ValueWithRandom","AbsorberSize","density","random","minimumValue","value","limit","data","undefined","radius","load"],"mappings":";;;;;;AAAA,SAASA,iBAAT,QAAkC,qBAAlC;AACA,SAASC,eAAT,QAAgC,6CAAhC;AACA,WAAaC,YAAb;AAAA;;AAAA;;AACI,0BAAc;AAAA;;AAAA;;AACV;AACA,UAAKC,OAAL,GAAe,CAAf;AACA,UAAKC,MAAL,CAAYC,YAAZ,GAA2B,CAA3B;AACA,UAAKC,KAAL,GAAa,EAAb;AACA,UAAKC,KAAL,GAAa,IAAIP,iBAAJ,EAAb;AALU;AAMb;;AAPL;AAAA;AAAA,WAQI,cAAKQ,IAAL,EAAW;AACP,UAAI,CAACA,IAAL,EAAW;AACP;AACH;;AACD,6EAAWA,IAAX;;AACA,UAAIA,IAAI,CAACL,OAAL,KAAiBM,SAArB,EAAgC;AAC5B,aAAKN,OAAL,GAAeK,IAAI,CAACL,OAApB;AACH;;AACD,UAAI,OAAOK,IAAI,CAACD,KAAZ,KAAsB,QAA1B,EAAoC;AAChC,aAAKA,KAAL,CAAWG,MAAX,GAAoBF,IAAI,CAACD,KAAzB;AACH,OAFD,MAGK;AACD,aAAKA,KAAL,CAAWI,IAAX,CAAgBH,IAAI,CAACD,KAArB;AACH;AACJ;AAtBL;;AAAA;AAAA,EAAkCN,eAAlC","sourcesContent":["import { AbsorberSizeLimit } from \"./AbsorberSizeLimit\";\nimport { ValueWithRandom } from \"../../../../Options/Classes/ValueWithRandom\";\nexport class AbsorberSize extends ValueWithRandom {\n    constructor() {\n        super();\n        this.density = 5;\n        this.random.minimumValue = 1;\n        this.value = 50;\n        this.limit = new AbsorberSizeLimit();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.density !== undefined) {\n            this.density = data.density;\n        }\n        if (typeof data.limit === \"number\") {\n            this.limit.radius = data.limit;\n        }\n        else {\n            this.limit.load(data.limit);\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}