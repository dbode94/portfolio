{"ast":null,"code":"import _classCallCheck from \"E:/Dev/Projects/In Progress/portfolio-backup/myportfolio/portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"E:/Dev/Projects/In Progress/portfolio-backup/myportfolio/portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { deepExtend, setRangeValue } from \"../../../../Utils\";\nimport { Attract } from \"./Attract\";\nimport { MoveAngle } from \"./MoveAngle\";\nimport { MoveGravity } from \"./MoveGravity\";\nimport { OutModes } from \"./OutModes\";\nimport { Path } from \"./Path/Path\";\nimport { Spin } from \"./Spin\";\nimport { Trail } from \"./Trail\";\nexport var Move = /*#__PURE__*/function () {\n  function Move() {\n    _classCallCheck(this, Move);\n\n    this.angle = new MoveAngle();\n    this.attract = new Attract();\n    this.decay = 0;\n    this.distance = {};\n    this.direction = \"none\";\n    this.drift = 0;\n    this.enable = false;\n    this.gravity = new MoveGravity();\n    this.path = new Path();\n    this.outModes = new OutModes();\n    this.random = false;\n    this.size = false;\n    this.speed = 2;\n    this.spin = new Spin();\n    this.straight = false;\n    this.trail = new Trail();\n    this.vibrate = false;\n    this.warp = false;\n  }\n\n  _createClass(Move, [{\n    key: \"collisions\",\n    get: function get() {\n      return false;\n    },\n    set: function set(value) {}\n  }, {\n    key: \"bounce\",\n    get: function get() {\n      return this.collisions;\n    },\n    set: function set(value) {\n      this.collisions = value;\n    }\n  }, {\n    key: \"out_mode\",\n    get: function get() {\n      return this.outMode;\n    },\n    set: function set(value) {\n      this.outMode = value;\n    }\n  }, {\n    key: \"outMode\",\n    get: function get() {\n      return this.outModes.default;\n    },\n    set: function set(value) {\n      this.outModes.default = value;\n    }\n  }, {\n    key: \"noise\",\n    get: function get() {\n      return this.path;\n    },\n    set: function set(value) {\n      this.path = value;\n    }\n  }, {\n    key: \"load\",\n    value: function load(data) {\n      var _a, _b, _c;\n\n      if (data === undefined) {\n        return;\n      }\n\n      if (data.angle !== undefined) {\n        if (typeof data.angle === \"number\") {\n          this.angle.value = data.angle;\n        } else {\n          this.angle.load(data.angle);\n        }\n      }\n\n      this.attract.load(data.attract);\n\n      if (data.decay !== undefined) {\n        this.decay = data.decay;\n      }\n\n      if (data.direction !== undefined) {\n        this.direction = data.direction;\n      }\n\n      if (data.distance !== undefined) {\n        this.distance = typeof data.distance === \"number\" ? {\n          horizontal: data.distance,\n          vertical: data.distance\n        } : deepExtend({}, data.distance);\n      }\n\n      if (data.drift !== undefined) {\n        this.drift = setRangeValue(data.drift);\n      }\n\n      if (data.enable !== undefined) {\n        this.enable = data.enable;\n      }\n\n      this.gravity.load(data.gravity);\n      var outMode = (_a = data.outMode) !== null && _a !== void 0 ? _a : data.out_mode;\n\n      if (data.outModes !== undefined || outMode !== undefined) {\n        if (typeof data.outModes === \"string\" || data.outModes === undefined && outMode !== undefined) {\n          this.outModes.load({\n            default: (_b = data.outModes) !== null && _b !== void 0 ? _b : outMode\n          });\n        } else {\n          this.outModes.load(data.outModes);\n        }\n      }\n\n      this.path.load((_c = data.path) !== null && _c !== void 0 ? _c : data.noise);\n\n      if (data.random !== undefined) {\n        this.random = data.random;\n      }\n\n      if (data.size !== undefined) {\n        this.size = data.size;\n      }\n\n      if (data.speed !== undefined) {\n        this.speed = setRangeValue(data.speed);\n      }\n\n      this.spin.load(data.spin);\n\n      if (data.straight !== undefined) {\n        this.straight = data.straight;\n      }\n\n      this.trail.load(data.trail);\n\n      if (data.vibrate !== undefined) {\n        this.vibrate = data.vibrate;\n      }\n\n      if (data.warp !== undefined) {\n        this.warp = data.warp;\n      }\n    }\n  }]);\n\n  return Move;\n}();","map":{"version":3,"sources":["E:/Dev/Projects/In Progress/portfolio-backup/myportfolio/portfolio/node_modules/tsparticles/esm/Options/Classes/Particles/Move/Move.js"],"names":["deepExtend","setRangeValue","Attract","MoveAngle","MoveGravity","OutModes","Path","Spin","Trail","Move","angle","attract","decay","distance","direction","drift","enable","gravity","path","outModes","random","size","speed","spin","straight","trail","vibrate","warp","value","collisions","outMode","default","data","_a","_b","_c","undefined","load","horizontal","vertical","out_mode","noise"],"mappings":"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","sourcesContent":["import { deepExtend, setRangeValue } from \"../../../../Utils\";\nimport { Attract } from \"./Attract\";\nimport { MoveAngle } from \"./MoveAngle\";\nimport { MoveGravity } from \"./MoveGravity\";\nimport { OutModes } from \"./OutModes\";\nimport { Path } from \"./Path/Path\";\nimport { Spin } from \"./Spin\";\nimport { Trail } from \"./Trail\";\nexport class Move {\n    constructor() {\n        this.angle = new MoveAngle();\n        this.attract = new Attract();\n        this.decay = 0;\n        this.distance = {};\n        this.direction = \"none\";\n        this.drift = 0;\n        this.enable = false;\n        this.gravity = new MoveGravity();\n        this.path = new Path();\n        this.outModes = new OutModes();\n        this.random = false;\n        this.size = false;\n        this.speed = 2;\n        this.spin = new Spin();\n        this.straight = false;\n        this.trail = new Trail();\n        this.vibrate = false;\n        this.warp = false;\n    }\n    get collisions() {\n        return false;\n    }\n    set collisions(value) {\n    }\n    get bounce() {\n        return this.collisions;\n    }\n    set bounce(value) {\n        this.collisions = value;\n    }\n    get out_mode() {\n        return this.outMode;\n    }\n    set out_mode(value) {\n        this.outMode = value;\n    }\n    get outMode() {\n        return this.outModes.default;\n    }\n    set outMode(value) {\n        this.outModes.default = value;\n    }\n    get noise() {\n        return this.path;\n    }\n    set noise(value) {\n        this.path = value;\n    }\n    load(data) {\n        var _a, _b, _c;\n        if (data === undefined) {\n            return;\n        }\n        if (data.angle !== undefined) {\n            if (typeof data.angle === \"number\") {\n                this.angle.value = data.angle;\n            }\n            else {\n                this.angle.load(data.angle);\n            }\n        }\n        this.attract.load(data.attract);\n        if (data.decay !== undefined) {\n            this.decay = data.decay;\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.distance !== undefined) {\n            this.distance =\n                typeof data.distance === \"number\"\n                    ? {\n                        horizontal: data.distance,\n                        vertical: data.distance,\n                    }\n                    : deepExtend({}, data.distance);\n        }\n        if (data.drift !== undefined) {\n            this.drift = setRangeValue(data.drift);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.gravity.load(data.gravity);\n        const outMode = (_a = data.outMode) !== null && _a !== void 0 ? _a : data.out_mode;\n        if (data.outModes !== undefined || outMode !== undefined) {\n            if (typeof data.outModes === \"string\" || (data.outModes === undefined && outMode !== undefined)) {\n                this.outModes.load({\n                    default: (_b = data.outModes) !== null && _b !== void 0 ? _b : outMode,\n                });\n            }\n            else {\n                this.outModes.load(data.outModes);\n            }\n        }\n        this.path.load((_c = data.path) !== null && _c !== void 0 ? _c : data.noise);\n        if (data.random !== undefined) {\n            this.random = data.random;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        this.spin.load(data.spin);\n        if (data.straight !== undefined) {\n            this.straight = data.straight;\n        }\n        this.trail.load(data.trail);\n        if (data.vibrate !== undefined) {\n            this.vibrate = data.vibrate;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}