{"ast":null,"code":"import _classCallCheck from \"/home/dnis/Dev/portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/dnis/Dev/portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nexport var OptionsColor = /*#__PURE__*/function () {\n  function OptionsColor() {\n    _classCallCheck(this, OptionsColor);\n\n    this.value = \"#fff\";\n  }\n\n  _createClass(OptionsColor, [{\n    key: \"load\",\n    value: function load(data) {\n      if ((data === null || data === void 0 ? void 0 : data.value) === undefined) {\n        return;\n      }\n\n      this.value = data.value;\n    }\n  }], [{\n    key: \"create\",\n    value: function create(source, data) {\n      var color = new OptionsColor();\n      color.load(source);\n\n      if (data !== undefined) {\n        if (typeof data === \"string\" || data instanceof Array) {\n          color.load({\n            value: data\n          });\n        } else {\n          color.load(data);\n        }\n      }\n\n      return color;\n    }\n  }]);\n\n  return OptionsColor;\n}();","map":{"version":3,"sources":["/home/dnis/Dev/portfolio/node_modules/tsparticles/esm/Options/Classes/OptionsColor.js"],"names":["OptionsColor","value","data","undefined","source","color","load","Array"],"mappings":";;AAAA,WAAaA,YAAb;AACI,0BAAc;AAAA;;AACV,SAAKC,KAAL,GAAa,MAAb;AACH;;AAHL;AAAA;AAAA,WAiBI,cAAKC,IAAL,EAAW;AACP,UAAI,CAACA,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,KAAK,CAA/B,GAAmC,KAAK,CAAxC,GAA4CA,IAAI,CAACD,KAAlD,MAA6DE,SAAjE,EAA4E;AACxE;AACH;;AACD,WAAKF,KAAL,GAAaC,IAAI,CAACD,KAAlB;AACH;AAtBL;AAAA;AAAA,WAII,gBAAcG,MAAd,EAAsBF,IAAtB,EAA4B;AACxB,UAAMG,KAAK,GAAG,IAAIL,YAAJ,EAAd;AACAK,MAAAA,KAAK,CAACC,IAAN,CAAWF,MAAX;;AACA,UAAIF,IAAI,KAAKC,SAAb,EAAwB;AACpB,YAAI,OAAOD,IAAP,KAAgB,QAAhB,IAA4BA,IAAI,YAAYK,KAAhD,EAAuD;AACnDF,UAAAA,KAAK,CAACC,IAAN,CAAW;AAAEL,YAAAA,KAAK,EAAEC;AAAT,WAAX;AACH,SAFD,MAGK;AACDG,UAAAA,KAAK,CAACC,IAAN,CAAWJ,IAAX;AACH;AACJ;;AACD,aAAOG,KAAP;AACH;AAhBL;;AAAA;AAAA","sourcesContent":["export class OptionsColor {\n    constructor() {\n        this.value = \"#fff\";\n    }\n    static create(source, data) {\n        const color = new OptionsColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (typeof data === \"string\" || data instanceof Array) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        if ((data === null || data === void 0 ? void 0 : data.value) === undefined) {\n            return;\n        }\n        this.value = data.value;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}