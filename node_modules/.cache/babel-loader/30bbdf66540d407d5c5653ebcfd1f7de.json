{"ast":null,"code":"import _classCallCheck from \"/home/dnis/Dev/portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/dnis/Dev/portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/dnis/Dev/portfolio/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/dnis/Dev/portfolio/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Range } from \"./Range\";\nexport var Rectangle = /*#__PURE__*/function (_Range) {\n  _inherits(Rectangle, _Range);\n\n  var _super = _createSuper(Rectangle);\n\n  function Rectangle(x, y, width, height) {\n    var _this;\n\n    _classCallCheck(this, Rectangle);\n\n    _this = _super.call(this, x, y);\n    _this.size = {\n      height: height,\n      width: width\n    };\n    return _this;\n  }\n\n  _createClass(Rectangle, [{\n    key: \"contains\",\n    value: function contains(point) {\n      var w = this.size.width;\n      var h = this.size.height;\n      var pos = this.position;\n      return point.x >= pos.x && point.x <= pos.x + w && point.y >= pos.y && point.y <= pos.y + h;\n    }\n  }, {\n    key: \"intersects\",\n    value: function intersects(range) {\n      var rect = range;\n      var circle = range;\n      var w = this.size.width;\n      var h = this.size.height;\n      var pos1 = this.position;\n      var pos2 = range.position;\n\n      if (circle.radius !== undefined) {\n        return circle.intersects(this);\n      } else if (rect.size !== undefined) {\n        var size2 = rect.size;\n        var w2 = size2.width;\n        var h2 = size2.height;\n        return pos2.x < pos1.x + w && pos2.x + w2 > pos1.x && pos2.y < pos1.y + h && pos2.y + h2 > pos1.y;\n      }\n\n      return false;\n    }\n  }]);\n\n  return Rectangle;\n}(Range);","map":{"version":3,"sources":["/home/dnis/Dev/portfolio/node_modules/tsparticles/esm/Core/Utils/Rectangle.js"],"names":["Range","Rectangle","x","y","width","height","size","point","w","h","pos","position","range","rect","circle","pos1","pos2","radius","undefined","intersects","size2","w2","h2"],"mappings":";;;;AAAA,SAASA,KAAT,QAAsB,SAAtB;AACA,WAAaC,SAAb;AAAA;;AAAA;;AACI,qBAAYC,CAAZ,EAAeC,CAAf,EAAkBC,KAAlB,EAAyBC,MAAzB,EAAiC;AAAA;;AAAA;;AAC7B,8BAAMH,CAAN,EAASC,CAAT;AACA,UAAKG,IAAL,GAAY;AACRD,MAAAA,MAAM,EAAEA,MADA;AAERD,MAAAA,KAAK,EAAEA;AAFC,KAAZ;AAF6B;AAMhC;;AAPL;AAAA;AAAA,WAQI,kBAASG,KAAT,EAAgB;AACZ,UAAMC,CAAC,GAAG,KAAKF,IAAL,CAAUF,KAApB;AACA,UAAMK,CAAC,GAAG,KAAKH,IAAL,CAAUD,MAApB;AACA,UAAMK,GAAG,GAAG,KAAKC,QAAjB;AACA,aAAOJ,KAAK,CAACL,CAAN,IAAWQ,GAAG,CAACR,CAAf,IAAoBK,KAAK,CAACL,CAAN,IAAWQ,GAAG,CAACR,CAAJ,GAAQM,CAAvC,IAA4CD,KAAK,CAACJ,CAAN,IAAWO,GAAG,CAACP,CAA3D,IAAgEI,KAAK,CAACJ,CAAN,IAAWO,GAAG,CAACP,CAAJ,GAAQM,CAA1F;AACH;AAbL;AAAA;AAAA,WAcI,oBAAWG,KAAX,EAAkB;AACd,UAAMC,IAAI,GAAGD,KAAb;AACA,UAAME,MAAM,GAAGF,KAAf;AACA,UAAMJ,CAAC,GAAG,KAAKF,IAAL,CAAUF,KAApB;AACA,UAAMK,CAAC,GAAG,KAAKH,IAAL,CAAUD,MAApB;AACA,UAAMU,IAAI,GAAG,KAAKJ,QAAlB;AACA,UAAMK,IAAI,GAAGJ,KAAK,CAACD,QAAnB;;AACA,UAAIG,MAAM,CAACG,MAAP,KAAkBC,SAAtB,EAAiC;AAC7B,eAAOJ,MAAM,CAACK,UAAP,CAAkB,IAAlB,CAAP;AACH,OAFD,MAGK,IAAIN,IAAI,CAACP,IAAL,KAAcY,SAAlB,EAA6B;AAC9B,YAAME,KAAK,GAAGP,IAAI,CAACP,IAAnB;AACA,YAAMe,EAAE,GAAGD,KAAK,CAAChB,KAAjB;AACA,YAAMkB,EAAE,GAAGF,KAAK,CAACf,MAAjB;AACA,eAAOW,IAAI,CAACd,CAAL,GAASa,IAAI,CAACb,CAAL,GAASM,CAAlB,IAAuBQ,IAAI,CAACd,CAAL,GAASmB,EAAT,GAAcN,IAAI,CAACb,CAA1C,IAA+Cc,IAAI,CAACb,CAAL,GAASY,IAAI,CAACZ,CAAL,GAASM,CAAjE,IAAsEO,IAAI,CAACb,CAAL,GAASmB,EAAT,GAAcP,IAAI,CAACZ,CAAhG;AACH;;AACD,aAAO,KAAP;AACH;AA/BL;;AAAA;AAAA,EAA+BH,KAA/B","sourcesContent":["import { Range } from \"./Range\";\nexport class Rectangle extends Range {\n    constructor(x, y, width, height) {\n        super(x, y);\n        this.size = {\n            height: height,\n            width: width,\n        };\n    }\n    contains(point) {\n        const w = this.size.width;\n        const h = this.size.height;\n        const pos = this.position;\n        return point.x >= pos.x && point.x <= pos.x + w && point.y >= pos.y && point.y <= pos.y + h;\n    }\n    intersects(range) {\n        const rect = range;\n        const circle = range;\n        const w = this.size.width;\n        const h = this.size.height;\n        const pos1 = this.position;\n        const pos2 = range.position;\n        if (circle.radius !== undefined) {\n            return circle.intersects(this);\n        }\n        else if (rect.size !== undefined) {\n            const size2 = rect.size;\n            const w2 = size2.width;\n            const h2 = size2.height;\n            return pos2.x < pos1.x + w && pos2.x + w2 > pos1.x && pos2.y < pos1.y + h && pos2.y + h2 > pos1.y;\n        }\n        return false;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}