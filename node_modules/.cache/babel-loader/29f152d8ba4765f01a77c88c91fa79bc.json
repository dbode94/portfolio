{"ast":null,"code":"import _classCallCheck from \"/home/dnis/Dev/portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/dnis/Dev/portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { getRangeValue, randomInRange, setRangeValue } from \"../../Utils\";\nexport var LifeUpdater = /*#__PURE__*/function () {\n  function LifeUpdater(container) {\n    _classCallCheck(this, LifeUpdater);\n\n    this.container = container;\n  }\n\n  _createClass(LifeUpdater, [{\n    key: \"init\",\n    value: function init() {}\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled(particle) {\n      return !particle.destroyed;\n    }\n  }, {\n    key: \"update\",\n    value: function update(particle, delta) {\n      if (!this.isEnabled(particle)) {\n        return;\n      }\n\n      var life = particle.life;\n      var justSpawned = false;\n\n      if (particle.spawning) {\n        life.delayTime += delta.value;\n\n        if (life.delayTime >= particle.life.delay) {\n          justSpawned = true;\n          particle.spawning = false;\n          life.delayTime = 0;\n          life.time = 0;\n        } else {\n          return;\n        }\n      }\n\n      if (life.duration === -1) {\n        return;\n      }\n\n      if (particle.spawning) {\n        return;\n      }\n\n      if (justSpawned) {\n        life.time = 0;\n      } else {\n        life.time += delta.value;\n      }\n\n      if (life.time < life.duration) {\n        return;\n      }\n\n      life.time = 0;\n\n      if (particle.life.count > 0) {\n        particle.life.count--;\n      }\n\n      if (particle.life.count === 0) {\n        particle.destroy();\n        return;\n      }\n\n      var canvasSize = this.container.canvas.size,\n          widthRange = setRangeValue(0, canvasSize.width),\n          heightRange = setRangeValue(0, canvasSize.width);\n      particle.position.x = randomInRange(widthRange);\n      particle.position.y = randomInRange(heightRange);\n      particle.spawning = true;\n      life.delayTime = 0;\n      life.time = 0;\n      particle.reset();\n      var lifeOptions = particle.options.life;\n      life.delay = getRangeValue(lifeOptions.delay.value) * 1000;\n      life.duration = getRangeValue(lifeOptions.duration.value) * 1000;\n    }\n  }]);\n\n  return LifeUpdater;\n}();","map":{"version":3,"sources":["/home/dnis/Dev/portfolio/node_modules/tsparticles/esm/Updaters/Life/LifeUpdater.js"],"names":["getRangeValue","randomInRange","setRangeValue","LifeUpdater","container","particle","destroyed","delta","isEnabled","life","justSpawned","spawning","delayTime","value","delay","time","duration","count","destroy","canvasSize","canvas","size","widthRange","width","heightRange","position","x","y","reset","lifeOptions","options"],"mappings":"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","sourcesContent":["import { getRangeValue, randomInRange, setRangeValue } from \"../../Utils\";\nexport class LifeUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init() {\n    }\n    isEnabled(particle) {\n        return !particle.destroyed;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        const life = particle.life;\n        let justSpawned = false;\n        if (particle.spawning) {\n            life.delayTime += delta.value;\n            if (life.delayTime >= particle.life.delay) {\n                justSpawned = true;\n                particle.spawning = false;\n                life.delayTime = 0;\n                life.time = 0;\n            }\n            else {\n                return;\n            }\n        }\n        if (life.duration === -1) {\n            return;\n        }\n        if (particle.spawning) {\n            return;\n        }\n        if (justSpawned) {\n            life.time = 0;\n        }\n        else {\n            life.time += delta.value;\n        }\n        if (life.time < life.duration) {\n            return;\n        }\n        life.time = 0;\n        if (particle.life.count > 0) {\n            particle.life.count--;\n        }\n        if (particle.life.count === 0) {\n            particle.destroy();\n            return;\n        }\n        const canvasSize = this.container.canvas.size, widthRange = setRangeValue(0, canvasSize.width), heightRange = setRangeValue(0, canvasSize.width);\n        particle.position.x = randomInRange(widthRange);\n        particle.position.y = randomInRange(heightRange);\n        particle.spawning = true;\n        life.delayTime = 0;\n        life.time = 0;\n        particle.reset();\n        const lifeOptions = particle.options.life;\n        life.delay = getRangeValue(lifeOptions.delay.value) * 1000;\n        life.duration = getRangeValue(lifeOptions.duration.value) * 1000;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}