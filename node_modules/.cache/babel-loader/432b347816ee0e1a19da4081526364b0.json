{"ast":null,"code":"import _asyncToGenerator from \"E:/Dev/Projects/In Progress/portfolio-backup/myportfolio/portfolio/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"E:/Dev/Projects/In Progress/portfolio-backup/myportfolio/portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"E:/Dev/Projects/In Progress/portfolio-backup/myportfolio/portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _regeneratorRuntime from \"E:\\\\Dev\\\\Projects\\\\In Progress\\\\portfolio-backup\\\\myportfolio\\\\portfolio\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\nimport { PolygonMask } from \"./Options/Classes/PolygonMask\";\nimport { PolygonMaskInstance } from \"./PolygonMaskInstance\";\nimport { isSsr } from \"../../Utils\";\n\nvar PolygonMaskPlugin = /*#__PURE__*/function () {\n  function PolygonMaskPlugin() {\n    _classCallCheck(this, PolygonMaskPlugin);\n\n    this.id = \"polygonMask\";\n  }\n\n  _createClass(PolygonMaskPlugin, [{\n    key: \"getPlugin\",\n    value: function getPlugin(container) {\n      return new PolygonMaskInstance(container);\n    }\n  }, {\n    key: \"needsPlugin\",\n    value: function needsPlugin(options) {\n      var _a, _b, _c;\n\n      return (_b = (_a = options === null || options === void 0 ? void 0 : options.polygon) === null || _a === void 0 ? void 0 : _a.enable) !== null && _b !== void 0 ? _b : ((_c = options === null || options === void 0 ? void 0 : options.polygon) === null || _c === void 0 ? void 0 : _c.type) !== undefined && options.polygon.type !== \"none\";\n    }\n  }, {\n    key: \"loadOptions\",\n    value: function loadOptions(options, source) {\n      if (!this.needsPlugin(source)) {\n        return;\n      }\n\n      var optionsCast = options;\n      var polygonOptions = optionsCast.polygon;\n\n      if ((polygonOptions === null || polygonOptions === void 0 ? void 0 : polygonOptions.load) === undefined) {\n        optionsCast.polygon = polygonOptions = new PolygonMask();\n      }\n\n      polygonOptions.load(source === null || source === void 0 ? void 0 : source.polygon);\n    }\n  }]);\n\n  return PolygonMaskPlugin;\n}();\n\nexport function loadPolygonMaskPlugin(_x) {\n  return _loadPolygonMaskPlugin.apply(this, arguments);\n}\n\nfunction _loadPolygonMaskPlugin() {\n  _loadPolygonMaskPlugin = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(engine) {\n    var plugin;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(!isSsr() && !(\"SVGPathSeg\" in window))) {\n              _context.next = 3;\n              break;\n            }\n\n            _context.next = 3;\n            return import(\"./pathseg\");\n\n          case 3:\n            plugin = new PolygonMaskPlugin();\n            _context.next = 6;\n            return engine.addPlugin(plugin);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _loadPolygonMaskPlugin.apply(this, arguments);\n}","map":{"version":3,"sources":["E:/Dev/Projects/In Progress/portfolio-backup/myportfolio/portfolio/node_modules/tsparticles/esm/Plugins/PolygonMask/index.js"],"names":["PolygonMask","PolygonMaskInstance","isSsr","PolygonMaskPlugin","id","container","options","_a","_b","_c","polygon","enable","type","undefined","source","needsPlugin","optionsCast","polygonOptions","load","loadPolygonMaskPlugin","engine","window","plugin","addPlugin"],"mappings":";;;;AAAA,SAASA,WAAT,QAA4B,+BAA5B;AACA,SAASC,mBAAT,QAAoC,uBAApC;AACA,SAASC,KAAT,QAAsB,aAAtB;;IACMC,iB;AACF,+BAAc;AAAA;;AACV,SAAKC,EAAL,GAAU,aAAV;AACH;;;;WACD,mBAAUC,SAAV,EAAqB;AACjB,aAAO,IAAIJ,mBAAJ,CAAwBI,SAAxB,CAAP;AACH;;;WACD,qBAAYC,OAAZ,EAAqB;AACjB,UAAIC,EAAJ,EAAQC,EAAR,EAAYC,EAAZ;;AACA,aAAQ,CAACD,EAAE,GAAG,CAACD,EAAE,GAAGD,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACI,OAAhE,MAA6E,IAA7E,IAAqFH,EAAE,KAAK,KAAK,CAAjG,GAAqG,KAAK,CAA1G,GAA8GA,EAAE,CAACI,MAAvH,MAAmI,IAAnI,IAA2IH,EAAE,KAAK,KAAK,CAAvJ,GAA2JA,EAA3J,GAAiK,CAAC,CAACC,EAAE,GAAGH,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACI,OAAhE,MAA6E,IAA7E,IAAqFD,EAAE,KAAK,KAAK,CAAjG,GAAqG,KAAK,CAA1G,GAA8GA,EAAE,CAACG,IAAlH,MAA4HC,SAA5H,IAAyIP,OAAO,CAACI,OAAR,CAAgBE,IAAhB,KAAyB,MAA3U;AACH;;;WACD,qBAAYN,OAAZ,EAAqBQ,MAArB,EAA6B;AACzB,UAAI,CAAC,KAAKC,WAAL,CAAiBD,MAAjB,CAAL,EAA+B;AAC3B;AACH;;AACD,UAAME,WAAW,GAAGV,OAApB;AACA,UAAIW,cAAc,GAAGD,WAAW,CAACN,OAAjC;;AACA,UAAI,CAACO,cAAc,KAAK,IAAnB,IAA2BA,cAAc,KAAK,KAAK,CAAnD,GAAuD,KAAK,CAA5D,GAAgEA,cAAc,CAACC,IAAhF,MAA0FL,SAA9F,EAAyG;AACrGG,QAAAA,WAAW,CAACN,OAAZ,GAAsBO,cAAc,GAAG,IAAIjB,WAAJ,EAAvC;AACH;;AACDiB,MAAAA,cAAc,CAACC,IAAf,CAAoBJ,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuC,KAAK,CAA5C,GAAgDA,MAAM,CAACJ,OAA3E;AACH;;;;;;AAEL,gBAAsBS,qBAAtB;AAAA;AAAA;;;oFAAO,iBAAqCC,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,CAAClB,KAAK,EAAN,IAAY,EAAE,gBAAgBmB,MAAlB,CADb;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAEO,OAAO,WAAP,CAFP;;AAAA;AAIGC,YAAAA,MAJH,GAIY,IAAInB,iBAAJ,EAJZ;AAAA;AAAA,mBAKGiB,MAAM,CAACG,SAAP,CAAiBD,MAAjB,CALH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import { PolygonMask } from \"./Options/Classes/PolygonMask\";\nimport { PolygonMaskInstance } from \"./PolygonMaskInstance\";\nimport { isSsr } from \"../../Utils\";\nclass PolygonMaskPlugin {\n    constructor() {\n        this.id = \"polygonMask\";\n    }\n    getPlugin(container) {\n        return new PolygonMaskInstance(container);\n    }\n    needsPlugin(options) {\n        var _a, _b, _c;\n        return ((_b = (_a = options === null || options === void 0 ? void 0 : options.polygon) === null || _a === void 0 ? void 0 : _a.enable) !== null && _b !== void 0 ? _b : (((_c = options === null || options === void 0 ? void 0 : options.polygon) === null || _c === void 0 ? void 0 : _c.type) !== undefined && options.polygon.type !== \"none\"));\n    }\n    loadOptions(options, source) {\n        if (!this.needsPlugin(source)) {\n            return;\n        }\n        const optionsCast = options;\n        let polygonOptions = optionsCast.polygon;\n        if ((polygonOptions === null || polygonOptions === void 0 ? void 0 : polygonOptions.load) === undefined) {\n            optionsCast.polygon = polygonOptions = new PolygonMask();\n        }\n        polygonOptions.load(source === null || source === void 0 ? void 0 : source.polygon);\n    }\n}\nexport async function loadPolygonMaskPlugin(engine) {\n    if (!isSsr() && !(\"SVGPathSeg\" in window)) {\n        await import(\"./pathseg\");\n    }\n    const plugin = new PolygonMaskPlugin();\n    await engine.addPlugin(plugin);\n}\n"]},"metadata":{},"sourceType":"module"}