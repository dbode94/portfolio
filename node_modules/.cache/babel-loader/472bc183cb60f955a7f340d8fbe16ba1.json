{"ast":null,"code":"import _classCallCheck from \"E:/Dev/Projects/In Progress/portfolio-backup/myportfolio/portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"E:/Dev/Projects/In Progress/portfolio-backup/myportfolio/portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { colorToHsl, getRangeValue } from \"../../Utils\";\n\nfunction updateRoll(particle, delta) {\n  var roll = particle.options.roll;\n\n  if (!particle.roll || !roll.enable) {\n    return;\n  }\n\n  var speed = particle.roll.speed * delta.factor;\n  var max = 2 * Math.PI;\n  particle.roll.angle += speed;\n\n  if (particle.roll.angle > max) {\n    particle.roll.angle -= max;\n  }\n}\n\nexport var RollUpdater = /*#__PURE__*/function () {\n  function RollUpdater() {\n    _classCallCheck(this, RollUpdater);\n  }\n\n  _createClass(RollUpdater, [{\n    key: \"init\",\n    value: function init(particle) {\n      var rollOpt = particle.options.roll;\n\n      if (rollOpt.enable) {\n        particle.roll = {\n          angle: Math.random() * Math.PI * 2,\n          speed: getRangeValue(rollOpt.speed) / 360\n        };\n\n        if (rollOpt.backColor) {\n          particle.backColor = colorToHsl(rollOpt.backColor);\n        } else if (rollOpt.darken.enable && rollOpt.enlighten.enable) {\n          var alterType = Math.random() >= 0.5 ? \"darken\" : \"enlighten\";\n          particle.roll.alter = {\n            type: alterType,\n            value: alterType === \"darken\" ? rollOpt.darken.value : rollOpt.enlighten.value\n          };\n        } else if (rollOpt.darken.enable) {\n          particle.roll.alter = {\n            type: \"darken\",\n            value: rollOpt.darken.value\n          };\n        } else if (rollOpt.enlighten.enable) {\n          particle.roll.alter = {\n            type: \"enlighten\",\n            value: rollOpt.enlighten.value\n          };\n        }\n      } else {\n        particle.roll = {\n          angle: 0,\n          speed: 0\n        };\n      }\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled(particle) {\n      var roll = particle.options.roll;\n      return !particle.destroyed && !particle.spawning && roll.enable;\n    }\n  }, {\n    key: \"update\",\n    value: function update(particle, delta) {\n      if (!this.isEnabled(particle)) {\n        return;\n      }\n\n      updateRoll(particle, delta);\n    }\n  }]);\n\n  return RollUpdater;\n}();","map":{"version":3,"sources":["E:/Dev/Projects/In Progress/portfolio-backup/myportfolio/portfolio/node_modules/tsparticles/esm/Updaters/Roll/RollUpdater.js"],"names":["colorToHsl","getRangeValue","updateRoll","particle","delta","roll","options","enable","speed","factor","max","Math","PI","angle","RollUpdater","rollOpt","random","backColor","darken","enlighten","alterType","alter","type","value","destroyed","spawning","isEnabled"],"mappings":";;AAAA,SAASA,UAAT,EAAqBC,aAArB,QAA0C,aAA1C;;AACA,SAASC,UAAT,CAAoBC,QAApB,EAA8BC,KAA9B,EAAqC;AACjC,MAAMC,IAAI,GAAGF,QAAQ,CAACG,OAAT,CAAiBD,IAA9B;;AACA,MAAI,CAACF,QAAQ,CAACE,IAAV,IAAkB,CAACA,IAAI,CAACE,MAA5B,EAAoC;AAChC;AACH;;AACD,MAAMC,KAAK,GAAGL,QAAQ,CAACE,IAAT,CAAcG,KAAd,GAAsBJ,KAAK,CAACK,MAA1C;AACA,MAAMC,GAAG,GAAG,IAAIC,IAAI,CAACC,EAArB;AACAT,EAAAA,QAAQ,CAACE,IAAT,CAAcQ,KAAd,IAAuBL,KAAvB;;AACA,MAAIL,QAAQ,CAACE,IAAT,CAAcQ,KAAd,GAAsBH,GAA1B,EAA+B;AAC3BP,IAAAA,QAAQ,CAACE,IAAT,CAAcQ,KAAd,IAAuBH,GAAvB;AACH;AACJ;;AACD,WAAaI,WAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,WACI,cAAKX,QAAL,EAAe;AACX,UAAMY,OAAO,GAAGZ,QAAQ,CAACG,OAAT,CAAiBD,IAAjC;;AACA,UAAIU,OAAO,CAACR,MAAZ,EAAoB;AAChBJ,QAAAA,QAAQ,CAACE,IAAT,GAAgB;AACZQ,UAAAA,KAAK,EAAEF,IAAI,CAACK,MAAL,KAAgBL,IAAI,CAACC,EAArB,GAA0B,CADrB;AAEZJ,UAAAA,KAAK,EAAEP,aAAa,CAACc,OAAO,CAACP,KAAT,CAAb,GAA+B;AAF1B,SAAhB;;AAIA,YAAIO,OAAO,CAACE,SAAZ,EAAuB;AACnBd,UAAAA,QAAQ,CAACc,SAAT,GAAqBjB,UAAU,CAACe,OAAO,CAACE,SAAT,CAA/B;AACH,SAFD,MAGK,IAAIF,OAAO,CAACG,MAAR,CAAeX,MAAf,IAAyBQ,OAAO,CAACI,SAAR,CAAkBZ,MAA/C,EAAuD;AACxD,cAAMa,SAAS,GAAGT,IAAI,CAACK,MAAL,MAAiB,GAAjB,GAAuB,QAAvB,GAAkC,WAApD;AACAb,UAAAA,QAAQ,CAACE,IAAT,CAAcgB,KAAd,GAAsB;AAClBC,YAAAA,IAAI,EAAEF,SADY;AAElBG,YAAAA,KAAK,EAAEH,SAAS,KAAK,QAAd,GAAyBL,OAAO,CAACG,MAAR,CAAeK,KAAxC,GAAgDR,OAAO,CAACI,SAAR,CAAkBI;AAFvD,WAAtB;AAIH,SANI,MAOA,IAAIR,OAAO,CAACG,MAAR,CAAeX,MAAnB,EAA2B;AAC5BJ,UAAAA,QAAQ,CAACE,IAAT,CAAcgB,KAAd,GAAsB;AAClBC,YAAAA,IAAI,EAAE,QADY;AAElBC,YAAAA,KAAK,EAAER,OAAO,CAACG,MAAR,CAAeK;AAFJ,WAAtB;AAIH,SALI,MAMA,IAAIR,OAAO,CAACI,SAAR,CAAkBZ,MAAtB,EAA8B;AAC/BJ,UAAAA,QAAQ,CAACE,IAAT,CAAcgB,KAAd,GAAsB;AAClBC,YAAAA,IAAI,EAAE,WADY;AAElBC,YAAAA,KAAK,EAAER,OAAO,CAACI,SAAR,CAAkBI;AAFP,WAAtB;AAIH;AACJ,OA3BD,MA4BK;AACDpB,QAAAA,QAAQ,CAACE,IAAT,GAAgB;AAAEQ,UAAAA,KAAK,EAAE,CAAT;AAAYL,UAAAA,KAAK,EAAE;AAAnB,SAAhB;AACH;AACJ;AAlCL;AAAA;AAAA,WAmCI,mBAAUL,QAAV,EAAoB;AAChB,UAAME,IAAI,GAAGF,QAAQ,CAACG,OAAT,CAAiBD,IAA9B;AACA,aAAO,CAACF,QAAQ,CAACqB,SAAV,IAAuB,CAACrB,QAAQ,CAACsB,QAAjC,IAA6CpB,IAAI,CAACE,MAAzD;AACH;AAtCL;AAAA;AAAA,WAuCI,gBAAOJ,QAAP,EAAiBC,KAAjB,EAAwB;AACpB,UAAI,CAAC,KAAKsB,SAAL,CAAevB,QAAf,CAAL,EAA+B;AAC3B;AACH;;AACDD,MAAAA,UAAU,CAACC,QAAD,EAAWC,KAAX,CAAV;AACH;AA5CL;;AAAA;AAAA","sourcesContent":["import { colorToHsl, getRangeValue } from \"../../Utils\";\nfunction updateRoll(particle, delta) {\n    const roll = particle.options.roll;\n    if (!particle.roll || !roll.enable) {\n        return;\n    }\n    const speed = particle.roll.speed * delta.factor;\n    const max = 2 * Math.PI;\n    particle.roll.angle += speed;\n    if (particle.roll.angle > max) {\n        particle.roll.angle -= max;\n    }\n}\nexport class RollUpdater {\n    init(particle) {\n        const rollOpt = particle.options.roll;\n        if (rollOpt.enable) {\n            particle.roll = {\n                angle: Math.random() * Math.PI * 2,\n                speed: getRangeValue(rollOpt.speed) / 360,\n            };\n            if (rollOpt.backColor) {\n                particle.backColor = colorToHsl(rollOpt.backColor);\n            }\n            else if (rollOpt.darken.enable && rollOpt.enlighten.enable) {\n                const alterType = Math.random() >= 0.5 ? \"darken\" : \"enlighten\";\n                particle.roll.alter = {\n                    type: alterType,\n                    value: alterType === \"darken\" ? rollOpt.darken.value : rollOpt.enlighten.value,\n                };\n            }\n            else if (rollOpt.darken.enable) {\n                particle.roll.alter = {\n                    type: \"darken\",\n                    value: rollOpt.darken.value,\n                };\n            }\n            else if (rollOpt.enlighten.enable) {\n                particle.roll.alter = {\n                    type: \"enlighten\",\n                    value: rollOpt.enlighten.value,\n                };\n            }\n        }\n        else {\n            particle.roll = { angle: 0, speed: 0 };\n        }\n    }\n    isEnabled(particle) {\n        const roll = particle.options.roll;\n        return !particle.destroyed && !particle.spawning && roll.enable;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateRoll(particle, delta);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}