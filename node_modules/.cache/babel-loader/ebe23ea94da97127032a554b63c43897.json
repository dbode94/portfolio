{"ast":null,"code":"import _classCallCheck from \"/home/dnis/Dev/portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/dnis/Dev/portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/home/dnis/Dev/portfolio/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/home/dnis/Dev/portfolio/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/home/dnis/Dev/portfolio/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/dnis/Dev/portfolio/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { HslAnimation } from \"./HslAnimation\";\nimport { OptionsColor } from \"./OptionsColor\";\nexport var AnimatableColor = /*#__PURE__*/function (_OptionsColor) {\n  _inherits(AnimatableColor, _OptionsColor);\n\n  var _super = _createSuper(AnimatableColor);\n\n  function AnimatableColor() {\n    var _this;\n\n    _classCallCheck(this, AnimatableColor);\n\n    _this = _super.call(this);\n    _this.animation = new HslAnimation();\n    return _this;\n  }\n\n  _createClass(AnimatableColor, [{\n    key: \"load\",\n    value: function load(data) {\n      _get(_getPrototypeOf(AnimatableColor.prototype), \"load\", this).call(this, data);\n\n      if (!data) {\n        return;\n      }\n\n      var colorAnimation = data.animation;\n\n      if (colorAnimation !== undefined) {\n        if (colorAnimation.enable !== undefined) {\n          this.animation.h.load(colorAnimation);\n        } else {\n          this.animation.load(data.animation);\n        }\n      }\n    }\n  }], [{\n    key: \"create\",\n    value: function create(source, data) {\n      var color = new AnimatableColor();\n      color.load(source);\n\n      if (data !== undefined) {\n        if (typeof data === \"string\" || data instanceof Array) {\n          color.load({\n            value: data\n          });\n        } else {\n          color.load(data);\n        }\n      }\n\n      return color;\n    }\n  }]);\n\n  return AnimatableColor;\n}(OptionsColor);","map":{"version":3,"sources":["/home/dnis/Dev/portfolio/node_modules/tsparticles/esm/Options/Classes/AnimatableColor.js"],"names":["HslAnimation","OptionsColor","AnimatableColor","animation","data","colorAnimation","undefined","enable","h","load","source","color","Array","value"],"mappings":";;;;;;AAAA,SAASA,YAAT,QAA6B,gBAA7B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,WAAaC,eAAb;AAAA;;AAAA;;AACI,6BAAc;AAAA;;AAAA;;AACV;AACA,UAAKC,SAAL,GAAiB,IAAIH,YAAJ,EAAjB;AAFU;AAGb;;AAJL;AAAA;AAAA,WAkBI,cAAKI,IAAL,EAAW;AACP,gFAAWA,IAAX;;AACA,UAAI,CAACA,IAAL,EAAW;AACP;AACH;;AACD,UAAMC,cAAc,GAAGD,IAAI,CAACD,SAA5B;;AACA,UAAIE,cAAc,KAAKC,SAAvB,EAAkC;AAC9B,YAAID,cAAc,CAACE,MAAf,KAA0BD,SAA9B,EAAyC;AACrC,eAAKH,SAAL,CAAeK,CAAf,CAAiBC,IAAjB,CAAsBJ,cAAtB;AACH,SAFD,MAGK;AACD,eAAKF,SAAL,CAAeM,IAAf,CAAoBL,IAAI,CAACD,SAAzB;AACH;AACJ;AACJ;AAhCL;AAAA;AAAA,WAKI,gBAAcO,MAAd,EAAsBN,IAAtB,EAA4B;AACxB,UAAMO,KAAK,GAAG,IAAIT,eAAJ,EAAd;AACAS,MAAAA,KAAK,CAACF,IAAN,CAAWC,MAAX;;AACA,UAAIN,IAAI,KAAKE,SAAb,EAAwB;AACpB,YAAI,OAAOF,IAAP,KAAgB,QAAhB,IAA4BA,IAAI,YAAYQ,KAAhD,EAAuD;AACnDD,UAAAA,KAAK,CAACF,IAAN,CAAW;AAAEI,YAAAA,KAAK,EAAET;AAAT,WAAX;AACH,SAFD,MAGK;AACDO,UAAAA,KAAK,CAACF,IAAN,CAAWL,IAAX;AACH;AACJ;;AACD,aAAOO,KAAP;AACH;AAjBL;;AAAA;AAAA,EAAqCV,YAArC","sourcesContent":["import { HslAnimation } from \"./HslAnimation\";\nimport { OptionsColor } from \"./OptionsColor\";\nexport class AnimatableColor extends OptionsColor {\n    constructor() {\n        super();\n        this.animation = new HslAnimation();\n    }\n    static create(source, data) {\n        const color = new AnimatableColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (typeof data === \"string\" || data instanceof Array) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const colorAnimation = data.animation;\n        if (colorAnimation !== undefined) {\n            if (colorAnimation.enable !== undefined) {\n                this.animation.h.load(colorAnimation);\n            }\n            else {\n                this.animation.load(data.animation);\n            }\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}