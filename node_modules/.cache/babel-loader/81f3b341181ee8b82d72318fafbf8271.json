{"ast":null,"code":"var __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\n\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\n\nvar _EmitterInstance_firstSpawn, _EmitterInstance_startParticlesAdded, _EmitterInstance_engine;\n\nimport { colorToHsl, deepExtend, getRangeValue, isPointInside, randomInRange } from \"../../Utils\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { EmitterSize } from \"./Options/Classes/EmitterSize\";\nexport class EmitterInstance {\n  constructor(engine, emitters, container, options, position) {\n    var _a, _b, _c, _d, _e, _f;\n\n    var _g;\n\n    this.emitters = emitters;\n    this.container = container;\n\n    _EmitterInstance_firstSpawn.set(this, void 0);\n\n    _EmitterInstance_startParticlesAdded.set(this, void 0);\n\n    _EmitterInstance_engine.set(this, void 0);\n\n    __classPrivateFieldSet(this, _EmitterInstance_engine, engine, \"f\");\n\n    this.currentDuration = 0;\n    this.currentEmitDelay = 0;\n    this.currentSpawnDelay = 0;\n    this.initialPosition = position;\n\n    if (options instanceof Emitter) {\n      this.options = options;\n    } else {\n      this.options = new Emitter();\n      this.options.load(options);\n    }\n\n    this.spawnDelay = ((_a = this.options.life.delay) !== null && _a !== void 0 ? _a : 0) * 1000 / this.container.retina.reduceFactor;\n    this.name = this.options.name;\n    this.shape = (_b = __classPrivateFieldGet(this, _EmitterInstance_engine, \"f\").emitterShapeManager) === null || _b === void 0 ? void 0 : _b.getShape(this.options.shape);\n    this.fill = this.options.fill;\n\n    __classPrivateFieldSet(this, _EmitterInstance_firstSpawn, !this.options.life.wait, \"f\");\n\n    __classPrivateFieldSet(this, _EmitterInstance_startParticlesAdded, false, \"f\");\n\n    let particlesOptions = deepExtend({}, this.options.particles);\n    particlesOptions !== null && particlesOptions !== void 0 ? particlesOptions : particlesOptions = {};\n    (_c = particlesOptions.move) !== null && _c !== void 0 ? _c : particlesOptions.move = {};\n    (_d = (_g = particlesOptions.move).direction) !== null && _d !== void 0 ? _d : _g.direction = this.options.direction;\n\n    if (this.options.spawnColor) {\n      this.spawnColor = colorToHsl(this.options.spawnColor);\n    }\n\n    this.paused = !this.options.autoPlay;\n    this.particlesOptions = particlesOptions;\n    this.size = (_e = this.options.size) !== null && _e !== void 0 ? _e : (() => {\n      const size = new EmitterSize();\n      size.load({\n        height: 0,\n        mode: \"percent\",\n        width: 0\n      });\n      return size;\n    })();\n    this.lifeCount = (_f = this.options.life.count) !== null && _f !== void 0 ? _f : -1;\n    this.immortal = this.lifeCount <= 0;\n    this.play();\n  }\n\n  externalPlay() {\n    this.paused = false;\n    this.play();\n  }\n\n  externalPause() {\n    this.paused = true;\n    this.pause();\n  }\n\n  play() {\n    var _a;\n\n    if (this.paused) {\n      return;\n    }\n\n    if (this.container.retina.reduceFactor && (this.lifeCount > 0 || this.immortal || !this.options.life.count) && (__classPrivateFieldGet(this, _EmitterInstance_firstSpawn, \"f\") || this.currentSpawnDelay >= ((_a = this.spawnDelay) !== null && _a !== void 0 ? _a : 0))) {\n      if (this.emitDelay === undefined) {\n        const delay = getRangeValue(this.options.rate.delay);\n        this.emitDelay = 1000 * delay / this.container.retina.reduceFactor;\n      }\n\n      if (this.lifeCount > 0 || this.immortal) {\n        this.prepareToDie();\n      }\n    }\n  }\n\n  pause() {\n    if (this.paused) {\n      return;\n    }\n\n    delete this.emitDelay;\n  }\n\n  resize() {\n    const initialPosition = this.initialPosition;\n    this.position = initialPosition && isPointInside(initialPosition, this.container.canvas.size) ? initialPosition : this.calcPosition();\n  }\n\n  update(delta) {\n    var _a, _b, _c;\n\n    if (this.paused) {\n      return;\n    }\n\n    if (__classPrivateFieldGet(this, _EmitterInstance_firstSpawn, \"f\")) {\n      __classPrivateFieldSet(this, _EmitterInstance_firstSpawn, false, \"f\");\n\n      this.currentSpawnDelay = (_a = this.spawnDelay) !== null && _a !== void 0 ? _a : 0;\n      this.currentEmitDelay = (_b = this.emitDelay) !== null && _b !== void 0 ? _b : 0;\n    }\n\n    if (!__classPrivateFieldGet(this, _EmitterInstance_startParticlesAdded, \"f\")) {\n      __classPrivateFieldSet(this, _EmitterInstance_startParticlesAdded, true, \"f\");\n\n      this.emitParticles(this.options.startCount);\n    }\n\n    if (this.duration !== undefined) {\n      this.currentDuration += delta.value;\n\n      if (this.currentDuration >= this.duration) {\n        this.pause();\n\n        if (this.spawnDelay !== undefined) {\n          delete this.spawnDelay;\n        }\n\n        if (!this.immortal) {\n          this.lifeCount--;\n        }\n\n        if (this.lifeCount > 0 || this.immortal) {\n          this.position = this.calcPosition();\n          this.spawnDelay = ((_c = this.options.life.delay) !== null && _c !== void 0 ? _c : 0) * 1000 / this.container.retina.reduceFactor;\n        } else {\n          this.destroy();\n        }\n\n        this.currentDuration -= this.duration;\n        delete this.duration;\n      }\n    }\n\n    if (this.spawnDelay !== undefined) {\n      this.currentSpawnDelay += delta.value;\n\n      if (this.currentSpawnDelay >= this.spawnDelay) {\n        this.play();\n        this.currentSpawnDelay -= this.currentSpawnDelay;\n        delete this.spawnDelay;\n      }\n    }\n\n    if (this.emitDelay !== undefined) {\n      this.currentEmitDelay += delta.value;\n\n      if (this.currentEmitDelay >= this.emitDelay) {\n        this.emit();\n        this.currentEmitDelay -= this.emitDelay;\n      }\n    }\n  }\n\n  getPosition() {\n    if (this.options.domId) {\n      const container = this.container,\n            element = document.getElementById(this.options.domId);\n\n      if (element) {\n        const elRect = element.getBoundingClientRect();\n        return {\n          x: (elRect.x + elRect.width / 2) * container.retina.pixelRatio,\n          y: (elRect.y + elRect.height / 2) * container.retina.pixelRatio\n        };\n      }\n    }\n\n    return this.position;\n  }\n\n  getSize() {\n    const container = this.container;\n\n    if (this.options.domId) {\n      const element = document.getElementById(this.options.domId);\n\n      if (element) {\n        const elRect = element.getBoundingClientRect();\n        return {\n          width: elRect.width * container.retina.pixelRatio,\n          height: elRect.height * container.retina.pixelRatio\n        };\n      }\n    }\n\n    return {\n      width: this.size.mode === \"percent\" ? container.canvas.size.width * this.size.width / 100 : this.size.width,\n      height: this.size.mode === \"percent\" ? container.canvas.size.height * this.size.height / 100 : this.size.height\n    };\n  }\n\n  prepareToDie() {\n    var _a;\n\n    if (this.paused) {\n      return;\n    }\n\n    const duration = (_a = this.options.life) === null || _a === void 0 ? void 0 : _a.duration;\n\n    if (this.container.retina.reduceFactor && (this.lifeCount > 0 || this.immortal) && duration !== undefined && duration > 0) {\n      this.duration = duration * 1000;\n    }\n  }\n\n  destroy() {\n    this.emitters.removeEmitter(this);\n  }\n\n  calcPosition() {\n    var _a, _b;\n\n    const container = this.container;\n    const percentPosition = this.options.position;\n    return {\n      x: ((_a = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.x) !== null && _a !== void 0 ? _a : Math.random() * 100) / 100 * container.canvas.size.width,\n      y: ((_b = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.y) !== null && _b !== void 0 ? _b : Math.random() * 100) / 100 * container.canvas.size.height\n    };\n  }\n\n  emit() {\n    if (this.paused) {\n      return;\n    }\n\n    const quantity = getRangeValue(this.options.rate.quantity);\n    this.emitParticles(quantity);\n  }\n\n  emitParticles(quantity) {\n    var _a, _b, _c;\n\n    const container = this.container;\n    const position = this.getPosition();\n    const size = this.getSize();\n\n    for (let i = 0; i < quantity; i++) {\n      const particlesOptions = deepExtend({}, this.particlesOptions);\n\n      if (this.spawnColor) {\n        const hslAnimation = (_a = this.options.spawnColor) === null || _a === void 0 ? void 0 : _a.animation;\n\n        if (hslAnimation) {\n          this.spawnColor.h = this.setColorAnimation(hslAnimation.h, this.spawnColor.h, 360);\n          this.spawnColor.s = this.setColorAnimation(hslAnimation.s, this.spawnColor.s, 100);\n          this.spawnColor.l = this.setColorAnimation(hslAnimation.l, this.spawnColor.l, 100);\n        }\n\n        if (!particlesOptions.color) {\n          particlesOptions.color = {\n            value: this.spawnColor\n          };\n        } else {\n          particlesOptions.color.value = this.spawnColor;\n        }\n      }\n\n      if (!position) {\n        return;\n      }\n\n      const pPosition = (_c = (_b = this.shape) === null || _b === void 0 ? void 0 : _b.randomPosition(position, size, this.fill)) !== null && _c !== void 0 ? _c : position;\n      container.particles.addParticle(pPosition, particlesOptions);\n    }\n  }\n\n  setColorAnimation(animation, initValue, maxValue) {\n    var _a;\n\n    const container = this.container;\n\n    if (!animation.enable) {\n      return initValue;\n    }\n\n    const colorOffset = randomInRange(animation.offset);\n    const delay = getRangeValue(this.options.rate.delay);\n    const emitFactor = 1000 * delay / container.retina.reduceFactor;\n    const colorSpeed = (_a = animation.speed) !== null && _a !== void 0 ? _a : 0;\n    return (initValue + colorSpeed * container.fpsLimit / emitFactor + colorOffset * 3.6) % maxValue;\n  }\n\n}\n_EmitterInstance_firstSpawn = new WeakMap(), _EmitterInstance_startParticlesAdded = new WeakMap(), _EmitterInstance_engine = new WeakMap();","map":{"version":3,"sources":["E:/Dev/Projects/In Progress/portfolio-backup/myportfolio/portfolio/node_modules/tsparticles/esm/Plugins/Emitters/EmitterInstance.js"],"names":["__classPrivateFieldSet","receiver","state","value","kind","f","TypeError","has","call","set","__classPrivateFieldGet","get","_EmitterInstance_firstSpawn","_EmitterInstance_startParticlesAdded","_EmitterInstance_engine","colorToHsl","deepExtend","getRangeValue","isPointInside","randomInRange","Emitter","EmitterSize","EmitterInstance","constructor","engine","emitters","container","options","position","_a","_b","_c","_d","_e","_f","_g","currentDuration","currentEmitDelay","currentSpawnDelay","initialPosition","load","spawnDelay","life","delay","retina","reduceFactor","name","shape","emitterShapeManager","getShape","fill","wait","particlesOptions","particles","move","direction","spawnColor","paused","autoPlay","size","height","mode","width","lifeCount","count","immortal","play","externalPlay","externalPause","pause","emitDelay","undefined","rate","prepareToDie","resize","canvas","calcPosition","update","delta","emitParticles","startCount","duration","destroy","emit","getPosition","domId","element","document","getElementById","elRect","getBoundingClientRect","x","pixelRatio","y","getSize","removeEmitter","percentPosition","Math","random","quantity","i","hslAnimation","animation","h","setColorAnimation","s","l","color","pPosition","randomPosition","addParticle","initValue","maxValue","enable","colorOffset","offset","emitFactor","colorSpeed","speed","fpsLimit","WeakMap"],"mappings":"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","sourcesContent":["var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _EmitterInstance_firstSpawn, _EmitterInstance_startParticlesAdded, _EmitterInstance_engine;\nimport { colorToHsl, deepExtend, getRangeValue, isPointInside, randomInRange } from \"../../Utils\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { EmitterSize } from \"./Options/Classes/EmitterSize\";\nexport class EmitterInstance {\n    constructor(engine, emitters, container, options, position) {\n        var _a, _b, _c, _d, _e, _f;\n        var _g;\n        this.emitters = emitters;\n        this.container = container;\n        _EmitterInstance_firstSpawn.set(this, void 0);\n        _EmitterInstance_startParticlesAdded.set(this, void 0);\n        _EmitterInstance_engine.set(this, void 0);\n        __classPrivateFieldSet(this, _EmitterInstance_engine, engine, \"f\");\n        this.currentDuration = 0;\n        this.currentEmitDelay = 0;\n        this.currentSpawnDelay = 0;\n        this.initialPosition = position;\n        if (options instanceof Emitter) {\n            this.options = options;\n        }\n        else {\n            this.options = new Emitter();\n            this.options.load(options);\n        }\n        this.spawnDelay = (((_a = this.options.life.delay) !== null && _a !== void 0 ? _a : 0) * 1000) / this.container.retina.reduceFactor;\n        this.name = this.options.name;\n        this.shape = (_b = __classPrivateFieldGet(this, _EmitterInstance_engine, \"f\").emitterShapeManager) === null || _b === void 0 ? void 0 : _b.getShape(this.options.shape);\n        this.fill = this.options.fill;\n        __classPrivateFieldSet(this, _EmitterInstance_firstSpawn, !this.options.life.wait, \"f\");\n        __classPrivateFieldSet(this, _EmitterInstance_startParticlesAdded, false, \"f\");\n        let particlesOptions = deepExtend({}, this.options.particles);\n        particlesOptions !== null && particlesOptions !== void 0 ? particlesOptions : (particlesOptions = {});\n        (_c = particlesOptions.move) !== null && _c !== void 0 ? _c : (particlesOptions.move = {});\n        (_d = (_g = particlesOptions.move).direction) !== null && _d !== void 0 ? _d : (_g.direction = this.options.direction);\n        if (this.options.spawnColor) {\n            this.spawnColor = colorToHsl(this.options.spawnColor);\n        }\n        this.paused = !this.options.autoPlay;\n        this.particlesOptions = particlesOptions;\n        this.size =\n            (_e = this.options.size) !== null && _e !== void 0 ? _e : (() => {\n                const size = new EmitterSize();\n                size.load({\n                    height: 0,\n                    mode: \"percent\",\n                    width: 0,\n                });\n                return size;\n            })();\n        this.lifeCount = (_f = this.options.life.count) !== null && _f !== void 0 ? _f : -1;\n        this.immortal = this.lifeCount <= 0;\n        this.play();\n    }\n    externalPlay() {\n        this.paused = false;\n        this.play();\n    }\n    externalPause() {\n        this.paused = true;\n        this.pause();\n    }\n    play() {\n        var _a;\n        if (this.paused) {\n            return;\n        }\n        if (this.container.retina.reduceFactor &&\n            (this.lifeCount > 0 || this.immortal || !this.options.life.count) &&\n            (__classPrivateFieldGet(this, _EmitterInstance_firstSpawn, \"f\") || this.currentSpawnDelay >= ((_a = this.spawnDelay) !== null && _a !== void 0 ? _a : 0))) {\n            if (this.emitDelay === undefined) {\n                const delay = getRangeValue(this.options.rate.delay);\n                this.emitDelay = (1000 * delay) / this.container.retina.reduceFactor;\n            }\n            if (this.lifeCount > 0 || this.immortal) {\n                this.prepareToDie();\n            }\n        }\n    }\n    pause() {\n        if (this.paused) {\n            return;\n        }\n        delete this.emitDelay;\n    }\n    resize() {\n        const initialPosition = this.initialPosition;\n        this.position =\n            initialPosition && isPointInside(initialPosition, this.container.canvas.size)\n                ? initialPosition\n                : this.calcPosition();\n    }\n    update(delta) {\n        var _a, _b, _c;\n        if (this.paused) {\n            return;\n        }\n        if (__classPrivateFieldGet(this, _EmitterInstance_firstSpawn, \"f\")) {\n            __classPrivateFieldSet(this, _EmitterInstance_firstSpawn, false, \"f\");\n            this.currentSpawnDelay = (_a = this.spawnDelay) !== null && _a !== void 0 ? _a : 0;\n            this.currentEmitDelay = (_b = this.emitDelay) !== null && _b !== void 0 ? _b : 0;\n        }\n        if (!__classPrivateFieldGet(this, _EmitterInstance_startParticlesAdded, \"f\")) {\n            __classPrivateFieldSet(this, _EmitterInstance_startParticlesAdded, true, \"f\");\n            this.emitParticles(this.options.startCount);\n        }\n        if (this.duration !== undefined) {\n            this.currentDuration += delta.value;\n            if (this.currentDuration >= this.duration) {\n                this.pause();\n                if (this.spawnDelay !== undefined) {\n                    delete this.spawnDelay;\n                }\n                if (!this.immortal) {\n                    this.lifeCount--;\n                }\n                if (this.lifeCount > 0 || this.immortal) {\n                    this.position = this.calcPosition();\n                    this.spawnDelay = (((_c = this.options.life.delay) !== null && _c !== void 0 ? _c : 0) * 1000) / this.container.retina.reduceFactor;\n                }\n                else {\n                    this.destroy();\n                }\n                this.currentDuration -= this.duration;\n                delete this.duration;\n            }\n        }\n        if (this.spawnDelay !== undefined) {\n            this.currentSpawnDelay += delta.value;\n            if (this.currentSpawnDelay >= this.spawnDelay) {\n                this.play();\n                this.currentSpawnDelay -= this.currentSpawnDelay;\n                delete this.spawnDelay;\n            }\n        }\n        if (this.emitDelay !== undefined) {\n            this.currentEmitDelay += delta.value;\n            if (this.currentEmitDelay >= this.emitDelay) {\n                this.emit();\n                this.currentEmitDelay -= this.emitDelay;\n            }\n        }\n    }\n    getPosition() {\n        if (this.options.domId) {\n            const container = this.container, element = document.getElementById(this.options.domId);\n            if (element) {\n                const elRect = element.getBoundingClientRect();\n                return {\n                    x: (elRect.x + elRect.width / 2) * container.retina.pixelRatio,\n                    y: (elRect.y + elRect.height / 2) * container.retina.pixelRatio,\n                };\n            }\n        }\n        return this.position;\n    }\n    getSize() {\n        const container = this.container;\n        if (this.options.domId) {\n            const element = document.getElementById(this.options.domId);\n            if (element) {\n                const elRect = element.getBoundingClientRect();\n                return {\n                    width: elRect.width * container.retina.pixelRatio,\n                    height: elRect.height * container.retina.pixelRatio,\n                };\n            }\n        }\n        return {\n            width: this.size.mode === \"percent\"\n                ? (container.canvas.size.width * this.size.width) / 100\n                : this.size.width,\n            height: this.size.mode === \"percent\"\n                ? (container.canvas.size.height * this.size.height) / 100\n                : this.size.height,\n        };\n    }\n    prepareToDie() {\n        var _a;\n        if (this.paused) {\n            return;\n        }\n        const duration = (_a = this.options.life) === null || _a === void 0 ? void 0 : _a.duration;\n        if (this.container.retina.reduceFactor &&\n            (this.lifeCount > 0 || this.immortal) &&\n            duration !== undefined &&\n            duration > 0) {\n            this.duration = duration * 1000;\n        }\n    }\n    destroy() {\n        this.emitters.removeEmitter(this);\n    }\n    calcPosition() {\n        var _a, _b;\n        const container = this.container;\n        const percentPosition = this.options.position;\n        return {\n            x: (((_a = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.x) !== null && _a !== void 0 ? _a : Math.random() * 100) / 100) * container.canvas.size.width,\n            y: (((_b = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.y) !== null && _b !== void 0 ? _b : Math.random() * 100) / 100) * container.canvas.size.height,\n        };\n    }\n    emit() {\n        if (this.paused) {\n            return;\n        }\n        const quantity = getRangeValue(this.options.rate.quantity);\n        this.emitParticles(quantity);\n    }\n    emitParticles(quantity) {\n        var _a, _b, _c;\n        const container = this.container;\n        const position = this.getPosition();\n        const size = this.getSize();\n        for (let i = 0; i < quantity; i++) {\n            const particlesOptions = deepExtend({}, this.particlesOptions);\n            if (this.spawnColor) {\n                const hslAnimation = (_a = this.options.spawnColor) === null || _a === void 0 ? void 0 : _a.animation;\n                if (hslAnimation) {\n                    this.spawnColor.h = this.setColorAnimation(hslAnimation.h, this.spawnColor.h, 360);\n                    this.spawnColor.s = this.setColorAnimation(hslAnimation.s, this.spawnColor.s, 100);\n                    this.spawnColor.l = this.setColorAnimation(hslAnimation.l, this.spawnColor.l, 100);\n                }\n                if (!particlesOptions.color) {\n                    particlesOptions.color = {\n                        value: this.spawnColor,\n                    };\n                }\n                else {\n                    particlesOptions.color.value = this.spawnColor;\n                }\n            }\n            if (!position) {\n                return;\n            }\n            const pPosition = (_c = (_b = this.shape) === null || _b === void 0 ? void 0 : _b.randomPosition(position, size, this.fill)) !== null && _c !== void 0 ? _c : position;\n            container.particles.addParticle(pPosition, particlesOptions);\n        }\n    }\n    setColorAnimation(animation, initValue, maxValue) {\n        var _a;\n        const container = this.container;\n        if (!animation.enable) {\n            return initValue;\n        }\n        const colorOffset = randomInRange(animation.offset);\n        const delay = getRangeValue(this.options.rate.delay);\n        const emitFactor = (1000 * delay) / container.retina.reduceFactor;\n        const colorSpeed = (_a = animation.speed) !== null && _a !== void 0 ? _a : 0;\n        return (initValue + (colorSpeed * container.fpsLimit) / emitFactor + colorOffset * 3.6) % maxValue;\n    }\n}\n_EmitterInstance_firstSpawn = new WeakMap(), _EmitterInstance_startParticlesAdded = new WeakMap(), _EmitterInstance_engine = new WeakMap();\n"]},"metadata":{},"sourceType":"module"}